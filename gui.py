# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Pokebot_UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import threading
import time
from PyQt5.QtWidgets import QApplication

class GUI_Pokebot:
    def __init__(self,*args,**kwargs):
        super().__init__()
    def start_worker(thread=True,func=None,*args,**kwargs):
        if thread:
            t = threading.Thread(target=func,args=args,kwargs=kwargs)
            t.daemon=True
            t.start()

    def setupUi(self, Pokebot):
        self.Pokebot = Pokebot
        Pokebot.setObjectName("Pokebot")
        Pokebot.setEnabled(True)
        Pokebot.resize(298, 354)
        Pokebot.setMaximumSize(QtCore.QSize(298, 354))
        Pokebot.setStyleSheet("background-color: rgb(52, 52, 52);\n""")
        Pokebot.setWindowIcon(QtGui.QIcon('assets/gui/free-bar-chart-icon-676-thumb.png'))

        self.centralwidget = QtWidgets.QWidget(Pokebot)
        self.centralwidget.setObjectName("centralwidget")
        self.toolBox = QtWidgets.QToolBox(self.centralwidget)
        self.toolBox.setEnabled(True)
        self.toolBox.setGeometry(QtCore.QRect(0, 0, 301, 331))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBox.sizePolicy().hasHeightForWidth())
        self.toolBox.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.toolBox.setFont(font)
        self.toolBox.setMouseTracking(False)
        self.toolBox.setToolTip("")
        self.toolBox.setToolTipDuration(-1)
        self.toolBox.setStatusTip("")
        self.toolBox.setAutoFillBackground(False)
        self.toolBox.setStyleSheet("color: rgb(11, 255, 121);\n"
"border-top-color: rgb(0, 0, 0);")
        self.toolBox.setObjectName("toolBox")
        self.toolBoxPage1 = QtWidgets.QWidget()
        self.toolBoxPage1.setGeometry(QtCore.QRect(0, 0, 301, 265))
        self.toolBoxPage1.setObjectName("toolBoxPage1")
        self.checkBox_3 = QtWidgets.QCheckBox(self.toolBoxPage1)
        self.checkBox_3.setEnabled(True)
        self.checkBox_3.setGeometry(QtCore.QRect(200, 60, 70, 17))
        self.checkBox_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.checkBox_3.setStyleSheet("color: rgb(165, 165, 165);")
        self.checkBox_3.setChecked(False)
        self.checkBox_3.setObjectName("checkBox_3")
        self.checkBox = QtWidgets.QCheckBox(self.toolBoxPage1)
        self.checkBox.setGeometry(QtCore.QRect(200, 20, 70, 17))
        self.checkBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.checkBox.setStyleSheet("color: rgb(175, 175, 175);\n"
"color: rgb(165, 165, 165);")
        self.checkBox.setChecked(False)
        self.checkBox.setObjectName("checkBox")
        self.radioButton_2 = QtWidgets.QRadioButton(self.toolBoxPage1)
        self.radioButton_2.setGeometry(QtCore.QRect(20, 40, 82, 17))
        self.radioButton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.radioButton_2.setStyleSheet("color: rgb(165, 165, 165);\n"
"selection-color: rgb(255, 0, 0);\n"
"selection-background-color: rgb(255, 170, 255);")
        self.radioButton_2.setChecked(True)
        self.radioButton_2.setObjectName("radioButton_2")
        self.checkBox_2 = QtWidgets.QCheckBox(self.toolBoxPage1)
        self.checkBox_2.setEnabled(True)
        self.checkBox_2.setGeometry(QtCore.QRect(200, 40, 70, 17))
        self.checkBox_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.checkBox_2.setAutoFillBackground(False)
        self.checkBox_2.setStyleSheet("color: rgb(165, 165, 165);")
        self.checkBox_2.setChecked(True)
        self.checkBox_2.setObjectName("checkBox_2")
        self.radioButton_4 = QtWidgets.QRadioButton(self.toolBoxPage1)
        self.radioButton_4.setGeometry(QtCore.QRect(20, 20, 82, 17))
        self.radioButton_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.radioButton_4.setStyleSheet("color: rgb(165, 165, 165);\n"
"selection-color: rgb(255, 0, 0);")
        self.radioButton_4.setChecked(False)
        self.radioButton_4.setObjectName("radioButton_4")
        self.label = QtWidgets.QLabel(self.toolBoxPage1)
        self.label.setGeometry(QtCore.QRect(20, 0, 71, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.toolBoxPage1)
        self.label_2.setGeometry(QtCore.QRect(200, 0, 71, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.line = QtWidgets.QFrame(self.toolBoxPage1)
        self.line.setGeometry(QtCore.QRect(10, 80, 281, 21))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label_3 = QtWidgets.QLabel(self.toolBoxPage1)
        self.label_3.setGeometry(QtCore.QRect(20, 110, 51, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        self.checkBox_7 = QtWidgets.QCheckBox(self.toolBoxPage1)
        self.checkBox_7.setEnabled(True)
        self.checkBox_7.setGeometry(QtCore.QRect(20, 130, 91, 17))
        self.checkBox_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.checkBox_7.setStyleSheet("color: rgb(165, 165, 165);")
        self.checkBox_7.setChecked(True)
        self.checkBox_7.setObjectName("checkBox_7")
        self.checkBox_8 = QtWidgets.QCheckBox(self.toolBoxPage1)
        self.checkBox_8.setEnabled(True)
        self.checkBox_8.setGeometry(QtCore.QRect(20, 150, 91, 17))
        self.checkBox_8.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.checkBox_8.setStyleSheet("color: rgb(165, 165, 165);")
        self.checkBox_8.setChecked(True)
        self.checkBox_8.setObjectName("checkBox_8")
        self.label_4 = QtWidgets.QLabel(self.toolBoxPage1)
        self.label_4.setGeometry(QtCore.QRect(190, 110, 81, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.checkBox_10 = QtWidgets.QCheckBox(self.toolBoxPage1)
        self.checkBox_10.setEnabled(True)
        self.checkBox_10.setGeometry(QtCore.QRect(190, 130, 101, 17))
        self.checkBox_10.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.checkBox_10.setStyleSheet("color: rgb(165, 165, 165);")
        self.checkBox_10.setTristate(False)
        self.checkBox_10.setObjectName("checkBox_10")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("assets/gui/Home-icon.svg.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.toolBoxPage1, icon, "")
        self.toolBoxPage1_2 = QtWidgets.QWidget()
        self.toolBoxPage1_2.setGeometry(QtCore.QRect(0, 0, 301, 265))
        self.toolBoxPage1_2.setObjectName("toolBoxPage1_2")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("assets/gui/free-bar-chart-icon-676-thumb.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.toolBoxPage1_2, icon1, "")
        Pokebot.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Pokebot)
        self.statusbar.setObjectName("statusbar")
        Pokebot.setStatusBar(self.statusbar)
        self.actiondwasd = QtWidgets.QAction(Pokebot)
        self.actiondwasd.setObjectName("actiondwasd")

        self.retranslateUi(Pokebot)
        QtCore.QMetaObject.connectSlotsByName(Pokebot)
        Pokebot.setTabOrder(self.radioButton_4, self.radioButton_2)
        Pokebot.setTabOrder(self.radioButton_2, self.checkBox)
        Pokebot.setTabOrder(self.checkBox, self.checkBox_2)
        Pokebot.setTabOrder(self.checkBox_2, self.checkBox_3)

    def retranslateUi(self, Pokebot):
        _translate = QtCore.QCoreApplication.translate
        Pokebot.setWindowTitle(_translate("Pokebot", "Pokebot"))
        self.checkBox_3.setText(_translate("Pokebot", "Poke stop"))
        self.checkBox.setText(_translate("Pokebot", "Elite run"))
        self.radioButton_2.setText(_translate("Pokebot", "Idle"))
        self.checkBox_2.setText(_translate("Pokebot", "Shiny stop"))
        self.radioButton_4.setText(_translate("Pokebot", "Auto fight"))
        self.label.setText(_translate("Pokebot", "AFK settings"))
        self.label_2.setText(_translate("Pokebot", "Avoidance"))
        self.label_3.setText(_translate("Pokebot", "Anti-ban"))
        self.checkBox_7.setText(_translate("Pokebot", "Reject trades"))
        self.checkBox_8.setText(_translate("Pokebot", "Reject battles"))
        self.label_4.setText(_translate("Pokebot", "Battle helpers"))
        self.checkBox_10.setToolTip(_translate("Pokebot", "Select the move with the best multiplier (0.5x,1x,1.5x,2x)"))
        self.checkBox_10.setText(_translate("Pokebot", "Select best move"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.toolBoxPage1), _translate("Pokebot", "Main"))
        self.toolBox.setItemToolTip(self.toolBox.indexOf(self.toolBoxPage1), _translate("Pokebot", "This menu is where you access the main functions"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.toolBoxPage1_2), _translate("Pokebot", "Statistics"))
        self.toolBox.setItemToolTip(self.toolBox.indexOf(self.toolBoxPage1_2), _translate("Pokebot", "Here you can view basic statistics."))
        self.actiondwasd.setText(_translate("Pokebot", "dwasd"))